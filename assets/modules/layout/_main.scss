// Applying background to body and spacing at the bottom of the screen
body{
	background-color: $dark-grey;
	padding-bottom: 20px;
}

// Creation of the basic box in the accordion
.div-folded{
	width: 100%;
	min-height: 125px;
	background-color: $white;
	border: 1px solid $dark-grey;
	margin-top: 1px;
	position: relative;
	display: flex;
	flex-wrap:wrap;
	flex-direction:row;

	&.active{ //whenever the div-folded get's the active class it changes the fruit-name color
		.fruit-name{
			color: $peach
		}
	}
}

// Content of the accordion is in display none by default
.description{
	background:$light-grey;
	width: 100%;
	display: none;
	border-top: 1px solid $peach;
	color: #4c4c4c;
}

//targeting the "titles" of the accordion box, did not want to make them titles though
.fruit-name > p{
	font-size: 30px;
	line-height: 125px;
	margin-left: 80px;
}

ul li{
	margin-bottom: 20px;
	width: 100%;
	font-size: 20px;
	p{
		padding-right: 10%;
	}
}

// Old Creation of the cross, kept it here as a memory of the unconvenient way of using 3 divs.
/* .x-cross{
  width:22px;
  height:22px;
  position: absolute;
  top: 51.5px;
  right: 40px;
}

div[class*="cross-bar-"]{
  top:0px;
  left:10px;
  width:2px;
  height:100%;
  background-color:black;
  position:absolute;
}

.cross-bar-1{
}

.cross-bar-2{
  transform: rotate(90deg)
} */

// Creation of the Cross to be only in 1 div
// the container of the cross
.x-cross{
  width: 20px;
  height: 20px;
  position: absolute;
  right: 50px;
  top: 65px;
  transform: translateY(-50%);

  &::after,// creating the branches of the cross
  &::before{
    content: "";
    display: block;
    position: absolute;
    height: 2px;
    background-color: black;
    width: 20px;
    top: 50%;
    transition: all 1s ease-in-out; 
    right: 0;
  }
  // rotating one of the branches to create a cross
  &::after{
    transform: rotate(90deg);
    left: 0;
  }
  // rotation of cross into arrow after activation
  &.active{
    &::before{
      transform: rotate(-405deg);
      right: -2px;
      width: 15px;

    }
    &::after{
      width: 15px;
      transform: rotate(405deg);
      left: -2px;

    }
  }
}

